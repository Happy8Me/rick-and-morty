{"version":3,"sources":["components/nav/index.js","./assets/rick-morty.jpg","containers/home/index.js","containers/characters/charactersSlice.js","components/UI/ItemCard.js","components/UI/ModalWindow.js","components/UI/PaginationControlled.js","hooks/useDebounce.js","containers/characters/index.js","containers/episodes/episodesSlice.js","containers/episodes/index.js","containers/locations/locationsSlice.js","containers/locations/index.js","containers/myWatchList/myWatchListSlice.js","containers/myWatchList/InputWatchList.js","containers/myWatchList/WatchItem.js","containers/myWatchList/WatchList.js","containers/myWatchList/FilteredItem.js","containers/myWatchList/Footer.js","containers/myWatchList/ToggleWatched.js","containers/myWatchList/index.js","App.js","store/index.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","breakpoints","down","flex","display","alignItems","justifyContent","mobile","withRouter","props","history","classes","React","useState","anchorEl","setAnchorEl","open","Boolean","useTheme","isMobile","useMediaQuery","handleMenuClick","page","push","className","AppBar","position","Toolbar","Typography","variant","IconButton","edge","color","onClick","event","currentTarget","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","Tab","label","img","width","flexWrap","backgroundColor","paper","margin","padding","Home","src","alt","Paper","elevation","getCharactes","createAsyncThunk","a","status","gender","debouncedSpecies","search","fetch","then","res","json","charactersSlice","createSlice","name","initialState","characters","extraReducers","pending","state","action","fulfilled","payload","rejected","palette","text","secondary","media","height","maxWidth","ItemCard","item","type","setOpen","Card","CardActionArea","image","CardMedia","CardContent","gutterBottom","component","species","air_date","List","ListItem","ListItemText","primary","dimension","residents","length","button","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","map","el","index","nested","created","large","list","background","paddingLeft","ModalWindow","show","setShow","useEffect","resultToShow","tempShow","Object","entries","key","value","Array","isArray","val","getToShow","Dialog","DialogActions","Button","Avatar","DialogTitle","DialogContent","marginTop","PaginationControlled","countPages","setPage","Pagination","count","onChange","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","flexDirection","container","formControl","minWidth","selectEmpty","filters","Characters","dispatch","useDispatch","data","useSelector","info","pages","results","characterModal","setCharacterModal","setStatus","setGender","setSpecies","TextField","target","FormControl","InputLabel","Select","labelId","character","getEpisodes","debouncedName","episodesReducer","episodes","episode","textAlign","Episodes","episodeModal","setEpisodeModal","setName","Grid","xs","sm","getLocations","debouncedType","debouncedDimention","locationsReducer","locations","location","Locations","setType","setDimension","myWatchListSlice","reducers","addEpisode","Date","now","completed","toggleEpisode","findIndex","deleteEpisode","splice","clearAllCompletedEpisodes","filter","toggleAllEpisodes","every","actions","newItem","InputWatchList","setValue","e","onKeyDown","trim","WatchItem","Checkbox","checked","inputProps","WatchList","FilteredItem","updateFilter","preventDefault","footer","FilterConfig","Footer","activeEpisodesCount","myWatchList","filterItem","toggleAll","fontStyle","ToggleWatched","isAllCompleted","htmlFor","MyWatchList","setFilter","filteredEpisodes","Container","filterValue","App","exact","path","store","configureStore","reducer","myWatchListReducer","characterReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f5e11a58.chunk.js","sourcesContent":["import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { \r\n    useMediaQuery, \r\n    Menu, \r\n    MenuItem, \r\n    IconButton, \r\n    Typography, \r\n    Toolbar, \r\n    AppBar, \r\n    Tab,\r\n    makeStyles, \r\n    useTheme }from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n      [theme.breakpoints.down(\"sm\")] : {flexGrow: 1}\r\n  },\r\n  flex: {\r\n    display: \"flex\",\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  mobile: {\r\n    flex: 1\r\n  }\r\n}));\r\n\r\nconst Nav = (props) => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClick = (page) => {\r\n    history.push(page);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar className={classes.flex}>          \r\n            <div className={classes.mobile}>\r\n              \r\n              {isMobile \r\n              ? (\r\n              <div className={classes.flex}>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    RICK AND MORTY\r\n                </Typography>\r\n                <IconButton \r\n                    edge=\"start\" \r\n                    className={classes.menuButton} \r\n                    color=\"inherit\" \r\n                    aria-label=\"menu\"\r\n                    onClick={handleMenu}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id=\"menu-appbar\"\r\n                    anchorEl={anchorEl}\r\n                    anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                    }}\r\n                    keepMounted\r\n                    transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                    }}\r\n                    open={open}\r\n                    onClose={() => setAnchorEl(null)}\r\n                >\r\n                    <MenuItem onClick={() => handleMenuClick('/')}>Home</MenuItem>\r\n                    <MenuItem onClick={() => handleMenuClick('/characters')}>Characters</MenuItem>\r\n                    <MenuItem onClick={() => handleMenuClick('/episodes')}>Episodes</MenuItem>\r\n                    <MenuItem onClick={() => handleMenuClick('/locations')}>Locations</MenuItem>\r\n                    <MenuItem onClick={() => handleMenuClick('/my-watch-list')}>My Watch List</MenuItem>\r\n                </Menu>\r\n              </div>\r\n            ) : (\r\n            <div>\r\n                <Tab label=\"Home\" onClick={() => handleMenuClick('/')}/>\r\n                <Tab label=\"Characters\" onClick={() => handleMenuClick('/characters')}/>\r\n                <Tab label=\"Episodes\" onClick={() => handleMenuClick('/episodes')}/>\r\n                <Tab label=\"Locations\" onClick={() => handleMenuClick('/locations')}/>\r\n                <Tab label=\"My Watch List\" onClick={() => handleMenuClick('/my-watch-list')}/> \r\n            </div>\r\n              )\r\n              }\r\n            </div>\r\n        \r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Nav);\r\n","export default __webpack_public_path__ + \"./static/media/rick-morty.34267a5e.jpg\";","import { makeStyles, Typography, Paper } from '@material-ui/core';\r\nimport img from './../../assets/rick-morty.jpg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    img: {\r\n      width: '100%',\r\n    },    \r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#ebdeb4'\r\n    },\r\n    paper: {\r\n        width: '80%',\r\n        margin: '50px',\r\n        padding: '20px',\r\n        color: '#72346f',\r\n        backgroundColor: '#faf8da'\r\n    }\r\n  }));\r\n\r\nconst Home = () => {\r\n    const classes = useStyles();\r\n    return(\r\n        <div className={classes.root}>\r\n            <img src={img} alt=\"cover img\" className={classes.img}/>\r\n            <Paper  elevation={5} className={classes.paper}>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n                “Nobody exists on purpose. Nobody belongs anywhere. We’re all going to die. Come watch TV.” — Morty\r\n            </Typography>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const getCharactes = createAsyncThunk('characters/getCharactes', async ({page, status, gender, debouncedSpecies}) => {\r\n\r\n    let search = '';   \r\n    search += page ? `page=${page}` : '';\r\n    search += status ? `&status=${status}` : '';\r\n    search += gender ? `&gender=${gender}` : '';\r\n    search += debouncedSpecies ? `&species=${debouncedSpecies}` : '';     \r\n\r\n    return fetch(`https://rickandmortyapi.com/api/character/?${search}`).then(res => res.json())\r\n  })\r\n\r\nconst charactersSlice = createSlice({\r\n    name: 'characters',\r\n    initialState: {\r\n        characters: {},\r\n        status: null\r\n    },\r\n    extraReducers: {\r\n       [getCharactes.pending]: (state, action) => {\r\n           state.status = 'loading'\r\n       },\r\n       [getCharactes.fulfilled]: (state, {payload}) => {\r\n        state.characters = payload\r\n        state.status = 'success'\r\n        },\r\n        [getCharactes.rejected]: (state, action) => {\r\n            state.status = 'failed'\r\n        },\r\n    },\r\n});\r\n\r\nexport default charactersSlice.reducer;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { \r\n  Card, \r\n  CardActionArea, \r\n  CardContent, \r\n  CardMedia, \r\n  Typography, \r\n  List, \r\n  ListItem, \r\n  ListItemText, Collapse\r\n} from '@material-ui/core';\r\n\r\nimport { ExpandMore, ExpandLess } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  media: {\r\n    height: 140,\r\n    maxWidth: 345,\r\n    margin: 'auto'\r\n  },\r\n}));\r\n\r\nconst  ItemCard = ({item, type}) => {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    type === \"short\" \r\n    ? <Card className={classes.root}>\r\n \r\n      <CardActionArea>\r\n        {item.image && <CardMedia\r\n          className={classes.media} \r\n          image={item.image} \r\n          title={item.name}\r\n        />}\r\n        <CardContent>\r\n          {item.name && <Typography gutterBottom variant=\"h5\" component=\"h2\"> {item.name} </Typography>}\r\n          {item.gender && <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\"> Gender: {item.gender} </Typography>}\r\n          {item.species && <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\"> Species: {item.species} </Typography>}\r\n          {item.status &&<Typography variant=\"body2\" color=\"textSecondary\" component=\"p\"> Status: {item.status} </Typography>}\r\n          {item.air_date &&<Typography variant=\"body2\" color=\"textSecondary\" component=\"p\"> Air date: {item.air_date} </Typography>}\r\n        </CardContent>\r\n      </CardActionArea>\r\n\r\n    </Card>\r\n  : <Card className={classes.root}>\r\n      <List\r\n        component=\"nav\"\r\n        aria-labelledby=\"nested-list-subheader\"\r\n        className={classes.root}\r\n      >\r\n        {item.name && <ListItem> <ListItemText primary={`Name: ${item.name}`} /> </ListItem> }\r\n        {item.type && <ListItem> <ListItemText primary={`Type: ${item.type}`} /> </ListItem> }\r\n        {item.dimension && <ListItem> <ListItemText primary={`Dimension: ${item.dimension}`} /> </ListItem> }\r\n\r\n        {item.residents.length > 0 && <ListItem button onClick={handleClick}> \r\n          <ListItemText primary=\"residents\" /> \r\n          {open ? <ExpandLess /> : <ExpandMore />}\r\n        </ListItem> }\r\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n          <List component=\"div\" disablePadding>\r\n            {item.residents.length > 0 \r\n              && item.residents.map((el, index) => \r\n              <ListItem key={index} button className={classes.nested}>\r\n                <ListItemText primary={el} /> \r\n              </ListItem>\r\n            )}\r\n          </List>\r\n        </Collapse>\r\n\r\n        {item.created && <ListItem> <ListItemText primary={`Created: ${item.created}`} /> </ListItem> }       \r\n      </List>    \r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ItemCard;\r\n","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { \r\n  Button, \r\n  Dialog, \r\n  DialogActions, \r\n  DialogContent,  \r\n  Avatar, \r\n  DialogTitle,\r\n  List,\r\n  ListItem,\r\n  ListItemText\r\n}  from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  large: {\r\n    width: theme.spacing(12),\r\n    height: theme.spacing(12),\r\n    margin: 'auto'\r\n  },\r\n  list: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nconst ModalWindow = ({open, setOpen, item }) => {\r\n  const classes = useStyles();\r\n  const [show, setShow] = useState([]);\r\n\r\n  const getToShow = () => {\r\n    if (!item) return; \r\n    let tempShow=[];\r\n\r\n    for (const [key, value] of Object.entries(item)) {\r\n\r\n      if (Array.isArray(value)) {\r\n        tempShow.push(`${key}`)\r\n        value.map((val)=>{\r\n          if (typeof val !== 'object' && val !== null) {\r\n            tempShow.push(val)\r\n          }\r\n          return tempShow\r\n        }) \r\n      } else if (typeof value === 'object') {\r\n        tempShow.push(`${key}`)\r\n        for (let key in value) {        \r\n          tempShow.push(`${key}: ${value[key]}`)\r\n        }\r\n      } else {\r\n        tempShow.push(`${key}: ${value}`)\r\n      }\r\n    }\r\n    return tempShow\r\n  }\r\n\r\n  useEffect(()=> {\r\n    let resultToShow = getToShow();\r\n    setShow(resultToShow)\r\n  },[item])\r\n\r\n  const toShow = item \r\n  ? (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={() =>  setOpen(false)}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen(false)} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n        {item.image && <Avatar alt=\"Remy Sharp\" src={item.image} className={classes.large} />}\r\n        <DialogTitle id=\"alert-dialog-title\">{item.name}</DialogTitle>\r\n        <DialogContent>\r\n\r\n          <List component=\"nav\" className={classes.list}>\r\n            {show && (show.map((el, index) => {\r\n              return (\r\n                <ListItem key={index}>\r\n                  <ListItemText secondary={el} />\r\n                </ListItem>\r\n              )\r\n            }))}\r\n          </List>\r\n\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  ) \r\n  : '';\r\n\r\n  return toShow\r\n};\r\n\r\nexport default ModalWindow;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function PaginationControlled({countPages, setPage, page}) {\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Pagination count={countPages} page={page} onChange={handleChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport const useDebounce = ( val, delay) => {\r\n    const [debouncedValue, setDebouncedValue] = useState(val);\r\n\r\n    useEffect(()=>{\r\n        const handler = setTimeout(() => {\r\n            setDebouncedValue(val);\r\n        }, delay);\r\n\r\n        return () => {\r\n            clearTimeout(handler);\r\n        };\r\n\r\n    }, [val, delay]);\r\n\r\n    return debouncedValue;\r\n};","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getCharactes } from './charactersSlice';\r\nimport ItemCard from '../../components/UI/ItemCard';\r\nimport ModalWindow from '../../components/UI/ModalWindow';\r\nimport PaginationControlled from '../../components/UI/PaginationControlled';\r\nimport { FormControl, InputLabel, Select, MenuItem, TextField } from '@material-ui/core';\r\nimport { useDebounce} from '../../hooks/useDebounce';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    container: {\r\n        width: '90%'\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n      },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n      filters: {\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          margin: 15\r\n      }\r\n  }));\r\n\r\nconst Characters = () => {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const data = useSelector(state => state.characters);\r\n    const countPages = data?.characters?.info?.pages;\r\n    const characters = data?.characters?.results;\r\n    const [open, setOpen] = useState(false);\r\n    const [page, setPage] = useState(1);\r\n    const [characterModal, setCharacterModal] = useState();\r\n    const [status, setStatus] = useState('');\r\n    const [gender, setGender] = useState('');\r\n    const [species, setSpecies] = useState('');\r\n    const debouncedSpecies = useDebounce(species, 500);\r\n\r\n    const handleStatus = (event) => {\r\n      setStatus(event.target.value);\r\n    };\r\n\r\n    const handleGender = (event) => {\r\n        setGender(event.target.value);\r\n    };\r\n    const handleSpecies = (event) => {\r\n        setSpecies(event.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(getCharactes({page, status, gender, debouncedSpecies}));\r\n    }, [dispatch, page, status, gender, debouncedSpecies])\r\n    \r\n    return(\r\n        <div className={classes.root}>\r\n            <div className={classes.filters}>                \r\n                <TextField id=\"outlined-basic\" label=\"Species\" variant=\"outlined\" value={species} onChange={handleSpecies}/>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Status</InputLabel>\r\n                    <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                    label=\"status\"\r\n                    >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value=\"alive\">Alive</MenuItem>\r\n                    <MenuItem value=\"dead\">Dead</MenuItem>\r\n                    <MenuItem value=\"unknown\">Unknown</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Gender</InputLabel>\r\n                    <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    value={gender}\r\n                    onChange={handleGender}\r\n                    label=\"gender\"\r\n                    >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value=\"female\">Female</MenuItem>\r\n                    <MenuItem value=\"male\">Male</MenuItem>\r\n                    <MenuItem value=\"genderless\">Genderless</MenuItem>\r\n                    <MenuItem value=\"unknown\">Unknown</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n\r\n            {characters && characters.map((character)=>{\r\n                return <div className={classes.container}\r\n                            onClick={() => {\r\n                                setCharacterModal(character)\r\n                                setOpen(true)\r\n                            }} \r\n                            key={character.id} \r\n                        >\r\n                            <ItemCard \r\n                                key={character.id}\r\n                                item={character}\r\n                                type=\"short\"\r\n                            /> \r\n                        </div>\r\n            })}\r\n            <PaginationControlled countPages={countPages} page={page} setPage={setPage}/>\r\n            <ModalWindow \r\n                open={open} \r\n                setOpen={setOpen}\r\n                item={characterModal}\r\n            />\r\n        </div>\r\n    )\r\n};\r\nexport default Characters; ","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const getEpisodes = createAsyncThunk('episodes/getEpisodes', async ({page, debouncedName}) => {\r\n    let search = '';   \r\n    search += page ? `page=${page}` : '';\r\n    search += debouncedName ? `&name=${debouncedName}` : '';     \r\n\r\n    return fetch(`https://rickandmortyapi.com/api/episode/?${search}`).then(res => res.json())\r\n  })\r\n\r\nconst episodesReducer = createSlice({\r\n    name: 'episodes',\r\n    initialState: {\r\n        episodes: {},\r\n        status: null\r\n    },\r\n    extraReducers: {\r\n        [getEpisodes.pending]: (state, action) => {\r\n           state.status = 'loading'\r\n        },\r\n        [getEpisodes.fulfilled]: (state, {payload}) => {\r\n            state.episodes = payload\r\n            state.status = 'success'\r\n        },\r\n        [getEpisodes.rejected]: (state, action) => {\r\n            state.status = 'failed'\r\n        },\r\n    },\r\n});\r\n\r\nexport default episodesReducer.reducer;","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getEpisodes } from './episodesSlice';\r\nimport ItemCard from '../../components/UI/ItemCard';\r\nimport ModalWindow from '../../components/UI/ModalWindow';\r\nimport PaginationControlled from '../../components/UI/PaginationControlled';\r\nimport { TextField, Grid } from '@material-ui/core';\r\nimport { useDebounce} from '../../hooks/useDebounce';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    episode: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        width: '100%'\r\n      },\r\n      filters: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        margin: 15\r\n    }\r\n  }));\r\n\r\nconst Episodes = () => {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const data = useSelector(state => state.episodes);\r\n    const countPages = data?.episodes?.info?.pages;\r\n    const episodes = data?.episodes?.results;\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [page, setPage] = useState(1);\r\n    const [episodeModal, setEpisodeModal] = useState();\r\n    const [name, setName] = useState('');\r\n   \r\n    const handleName = (event) => {\r\n        setName(event.target.value);\r\n      };\r\n\r\n    const debouncedName = useDebounce(name, 500);\r\n\r\n    useEffect(() => {\r\n        dispatch(getEpisodes({page, debouncedName}));\r\n    }, [dispatch, page, debouncedName])\r\n    \r\n    return(\r\n        <div className={classes.root}>\r\n        \r\n            <div className={classes.filters}>               \r\n                <TextField id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" value={name} onChange={handleName}/>\r\n            </div>\r\n\r\n            <Grid container>\r\n                {episodes && episodes.map((episode)=>{\r\n                    return <Grid item xs={11} sm={6} className={classes.episode}\r\n                                onClick={() => {\r\n                                    setEpisodeModal(episode)\r\n                                    setOpen(true)\r\n                                }} \r\n                                key={episode.id} \r\n                            >\r\n                                <ItemCard \r\n                                    key={episode.id}\r\n                                    item={episode}\r\n                                    type=\"short\"\r\n                                /> \r\n                            </Grid>\r\n                })}\r\n              </Grid>\r\n\r\n            <PaginationControlled countPages={countPages} page={page} setPage={setPage}/>\r\n\r\n            <ModalWindow \r\n                open={open} \r\n                setOpen={setOpen}\r\n                item={episodeModal}\r\n            />\r\n        </div>\r\n    )\r\n};\r\nexport default Episodes; ","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const getLocations = createAsyncThunk('locations/getLocations', async ({page, debouncedName, debouncedType, debouncedDimention}) => {\r\n    let search = '';   \r\n    search += page ? `page=${page}` : '';\r\n    search += debouncedName ? `&name=${debouncedName}` : '';\r\n    search += debouncedType ? `&type=${debouncedType}` : '';\r\n    search += debouncedDimention ? `&dimension=${debouncedDimention}` : '';     \r\n\r\n    return fetch(`https://rickandmortyapi.com/api/location/?${search}`).then(res => res.json())\r\n  })\r\n\r\nconst locationsReducer = createSlice({\r\n    name: 'locations',\r\n    initialState: {\r\n        locations: {},\r\n        status: null \r\n    },\r\n    extraReducers: {\r\n       [getLocations.pending]: (state, action) => {\r\n           state.status = 'loading'\r\n       },\r\n       [getLocations.fulfilled]: (state, {payload}) => {\r\n        state.locations = payload\r\n        state.status = 'success'\r\n        },\r\n        [getLocations.rejected]: (state, action) => {\r\n            state.status = 'failed'\r\n        },\r\n    },\r\n});\r\n\r\nexport default locationsReducer.reducer;","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getLocations } from './locationsSlice';\r\nimport ItemCard from '../../components/UI/ItemCard';\r\nimport PaginationControlled from '../../components/UI/PaginationControlled';\r\nimport { TextField, Grid } from '@material-ui/core';\r\nimport { useDebounce} from '../../hooks/useDebounce';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    location: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        width: '100%'\r\n      },\r\n    filters: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      margin: 15\r\n    }\r\n  }));\r\n \r\nconst Locations = () => {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const data = useSelector(state => state.locations);\r\n    const countPages = data?.locations?.info?.pages;\r\n    const locations = data?.locations?.results;\r\n    const [page, setPage] = useState(1);\r\n    const [name, setName] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [dimension, setDimension] = useState('');\r\n    \r\n \r\n    const handleName = (event) => {\r\n      setName(event.target.value);\r\n    };\r\n    const handleType = (event) => {\r\n      setType(event.target.value);\r\n    };\r\n    const handleDimension = (event) => {\r\n      setDimension(event.target.value);\r\n    };\r\n\r\n    const debouncedName = useDebounce(name, 500);\r\n    const debouncedType = useDebounce(type, 500);\r\n    const debouncedDimention = useDebounce(dimension, 500);\r\n\r\n    useEffect(() => {\r\n      dispatch(getLocations({page, debouncedName, debouncedType, debouncedDimention}));\r\n    }, [dispatch, page, debouncedName, debouncedType, debouncedDimention])\r\n  \r\n    return(\r\n        <div className={classes.root}>\r\n          <div className={classes.filters}>\r\n              <TextField id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" value={name} onChange={handleName}/>\r\n              <TextField id=\"outlined-basic\" label=\"Type\" variant=\"outlined\" value={type} onChange={handleType}/>\r\n              <TextField id=\"outlined-basic\" label=\"Dimension\" variant=\"outlined\" value={dimension} onChange={handleDimension}/>\r\n          </div>\r\n          <Grid container>\r\n            {locations && locations.map((location)=>{\r\n              return  <Grid item xs={11} sm={6} \r\n                          className={classes.location}\r\n                          key={location.id} \r\n                      >\r\n                        <ItemCard \r\n                            key={location.id}\r\n                            item={location}\r\n                        /> \r\n                      </Grid>\r\n            })}\r\n          </Grid>\r\n          <PaginationControlled countPages={countPages} page={page} setPage={setPage}/>\r\n      </div>\r\n    )\r\n};\r\nexport default Locations; ","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst myWatchListSlice = createSlice({\r\n    name: \"episodes\",\r\n    initialState: \r\n         [\r\n            {\r\n                \"id\": 1,\r\n                \"title\": \"Lawnmower Dog\",\r\n                \"completed\": false\r\n            },\r\n            {\r\n                \"id\": 2,\r\n                \"title\": \"Rixty Minutes\",\r\n                \"completed\": false\r\n            },\r\n            {\r\n                \"id\": 3,\r\n                \"title\": \"Something Ricked This Way Comes\",\r\n                \"completed\": false\r\n            }\r\n        ], \r\n  \r\n    reducers: {\r\n        addEpisode: (state, action) => { \r\n            const newEpisode = {\r\n                id: Date.now(),\r\n                title: action.payload.title,\r\n                completed: false\r\n            };\r\n            return [newEpisode, ...state]\r\n        },\r\n        toggleEpisode: (state, action) => {\r\n            const index = state.findIndex( (episode) => { return episode.id === action.payload.id} );\r\n            state[index].completed = action.payload.completed;\r\n        },\r\n        deleteEpisode: (state, action) => {\r\n            const index = state.findIndex( (episode) => { return episode.id === action.payload.id} );\r\n            state.splice(index, 1)\r\n        },\r\n        clearAllCompletedEpisodes: (state) => {        \r\n            return state.filter(episode => episode.completed === false)\r\n        },\r\n        toggleAllEpisodes: (state) => {\r\n            const allCompleted = state.every(episode => {return episode.completed === true});\r\n            if(allCompleted) {\r\n                state.map(episode => episode.completed = false)\r\n            } else {\r\n                state.map(episode => episode.completed = true)\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport const { \r\n    addEpisode, \r\n    toggleEpisode, \r\n    deleteEpisode,\r\n    toggleAllEpisodes, \r\n    clearAllCompletedEpisodes,\r\n} = myWatchListSlice.actions;\r\n\r\nexport default myWatchListSlice.reducer;\r\n\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addEpisode } from './myWatchListSlice';\r\nimport { TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  newItem: {\r\n    width: '85%',\r\n    margin: '30px 0'\r\n  }\r\n}));\r\n\r\nexport function InputWatchList() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n\r\n    <TextField\r\n      label=\"Watch next?\"\r\n      className={classes.newItem}\r\n      value={value}\r\n      onChange={(e) => setValue(e.target.value)}\r\n      onKeyDown={(e) => {\r\n        if(e.key === \"Enter\") {\r\n          if(e.target.value.trim()){\r\n            dispatch(addEpisode({\r\n              title: value,\r\n            }))\r\n          }\r\n          setValue(\"\");\r\n        }\r\n    }} \r\n    />\r\n  );\r\n}\r\n","import { useDispatch } from 'react-redux';\nimport { toggleEpisode, deleteEpisode } from './myWatchListSlice';\nimport { ListItem, Button, Checkbox, Typography } from '@material-ui/core';\n\nexport function WatchItem({ title, id, completed }) {\n  const dispatch = useDispatch();\n\n  const handleToggleEpisode = () => {\n    dispatch( toggleEpisode( {id: id, completed: !completed} ) );\n  }\n\n  const handleDeleteEpisode = () => {\n    dispatch( deleteEpisode( {id} ) )\n  }\n\n  return (\n    <ListItem>\n      <Checkbox\n        onChange={handleToggleEpisode}\n        checked={completed}\n        color=\"primary\"\n        inputProps={{ 'aria-label': 'secondary checkbox' }}\n      />\n        <Typography>{title}</Typography>\n        <Button \n          color=\"secondary\"\n          type=\"button\" \n          onClick={handleDeleteEpisode}>\n            X\n        </Button>\n    </ListItem>\n  );\n}\n","import React from 'react';\r\nimport { WatchItem } from \"./WatchItem\";\r\nimport { List } from '@material-ui/core';\r\n\r\nexport function WatchList({episodes}) {\r\n  return (\r\n    <List className=\"todo-list\">\r\n      {episodes.map(episode => {\r\n        return <WatchItem \r\n        key={episode.id} \r\n        id={episode.id}\r\n        title={episode.title}\r\n        completed={episode.completed}\r\n        />\r\n      })}\r\n    </List>\r\n  );\r\n}\r\n","import { Button } from '@material-ui/core';\r\n\r\nexport const FilteredItem = ( {item, updateFilter} ) => {\r\n    return (\r\n        <Button\r\n            color=\"primary\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              updateFilter(item.id)\r\n            }}\r\n          >\r\n            {item.title}\r\n        </Button>\r\n    )\r\n};","import { useSelector, useDispatch } from 'react-redux';\nimport { clearAllCompletedEpisodes } from './myWatchListSlice';\nimport { FilteredItem } from './FilteredItem';\nimport { Typography, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: \"baseline\",\n  }\n}));\n\nconst FilterConfig = [\n  {\n    title: \"All\", \n    id: \"all\"\n  },\n  {\n    title: \"Active\",\n    id: \"active\"\n  },\n  {\n    title: \"Completed\",\n    id: \"completed\"\n  }\n]\nexport function Footer ({updateFilter}) {\n  const classes = useStyles();\n  const activeEpisodesCount = useSelector((state) => {\n    return state.myWatchList.filter(episode => episode.completed === false).length\n  });\n\n  const dispatch = useDispatch();\n\n  return (\n    <footer className={classes.footer}>\n      <Typography variant=\"body2\" display=\"block\" gutterBottom>\n        { activeEpisodesCount } items left\n      </Typography>\n      <div >\n        {FilterConfig.map(filterItem => (\n          <FilteredItem \n            key={filterItem.id}\n            item={filterItem}\n            updateFilter={updateFilter}\n          />\n        ))}\n      </div>\n      { \n        <Button \n          className=\"clear-completed\"\n          onClick={(e) => {\n            e.preventDefault();\n            dispatch(clearAllCompletedEpisodes())\n          }}  \n        >\n        Clear completed</Button> }\n    </footer>\n  )\n};\n","import { useDispatch } from 'react-redux';\r\nimport { toggleAllEpisodes } from './myWatchListSlice';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Checkbox } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  toggleAll: {\r\n    width: '100%',\r\n    textAlign: 'left',\r\n    fontStyle: 'italic'\r\n  }\r\n});\r\n\r\nexport function ToggleWatched({ isAllCompleted }) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={classes.toggleAll}>\r\n      <Checkbox\r\n        onChange={(e) => dispatch(toggleAllEpisodes())}\r\n        checked={isAllCompleted}\r\n        color=\"primary\"\r\n        inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n      />\r\n      <label htmlFor=\"toggle-all\">Mark all as complete</label> \r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { InputWatchList } from './InputWatchList';\r\nimport { WatchList } from './WatchList';\r\nimport { Footer } from './Footer';\r\nimport { ToggleWatched } from './ToggleWatched';\r\nimport { Typography, Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {marginTop: '50px',}\r\n});\r\n \r\nconst MyWatchList = () => {\r\n  const classes = useStyles();\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const episodes = useSelector(state => state.myWatchList)\r\n  const isAllCompleted = (episodes.filter(episode => episode.completed).length === episodes.length)\r\n\r\n  const updateFilter = (filterValue) => {\r\n    setFilter(filterValue)\r\n  }\r\n\r\n  const filteredEpisodes = episodes.filter(episode => {\r\n    switch(filter) {\r\n      case \"active\":\r\n        return !episode.completed;\r\n      case \"completed\":\r\n        return episode.completed === true;\r\n      case \"all\":\r\n        return episode;\r\n      default: \r\n        return episode;\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Container component='div' maxWidth=\"sm\" className={classes.root}>\r\n      <Typography gutterBottom variant=\"h3\" component=\"h2\"> My Watch List </Typography>\r\n      <InputWatchList />\r\n      <WatchList episodes={filteredEpisodes}/>\r\n      {episodes.length > 0 && (<ToggleWatched isAllCompleted={isAllCompleted}/>)}  \r\n      {episodes.length > 0 && (<Footer updateFilter={updateFilter} />)} \r\n    </Container >\r\n  );\r\n};\r\n\r\nexport default MyWatchList; \r\n","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Nav from './components/nav';\nimport Home from './containers/home';\nimport Characters from './containers/characters';\nimport Episodes from './containers/episodes';\nimport Locations from './containers/locations';\nimport myWatchList from './containers/myWatchList';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/characters\" component={Characters} />\n          <Route path=\"/episodes\" component={Episodes} />\n          <Route path=\"/locations\" component={Locations} />\n          <Route path=\"/my-watch-list\" component={myWatchList} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport myWatchListReducer from '../containers/myWatchList/myWatchListSlice';\nimport characterReducer from '../containers/characters/charactersSlice';\nimport episodesReducer from '../containers/episodes/episodesSlice';\nimport locationsReducer from '../containers/locations/locationsSlice';\n\nexport const store = configureStore({\n  reducer: {\n    myWatchList: myWatchListReducer,\n    characters: characterReducer,\n    episodes: episodesReducer,\n    locations: locationsReducer\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <>\n   {/* <React.StrictMode> */}\n    <Provider store={store}>\n      <App />\n    </Provider>\n  {/* </React.StrictMode>, */}\n  </>,\n  document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}
